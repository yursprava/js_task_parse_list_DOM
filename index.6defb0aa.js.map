{"mappings":"ACcE,IAAM,EAEA,EAFA,EATC,MAAM,IAAI,CAHA,SAAS,gBAAgB,CAAC,OAGnB,IAAI,CAAC,SAAC,CAAA,CAAG,CAAjC,EACE,IAAM,EAAU,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,KAGnE,OAAO,AAFS,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,KAElD,CACnB,GAQA,CAFM,EAAK,SAAS,aAAa,CAAC,OAE/B,SAAS,CAAG,GAEf,EAAW,OAAO,CAAC,SAAC,CAApB,EAA2B,OAAA,EAAG,WAAW,CAAC,E,GAEnC,EAAW,GAAG,CAAC,SAAC,CAAvB,EAAkC,MAAA,CAChC,KAAM,EAAM,SAAS,CACrB,SAAU,EAAM,OAAO,CAAC,QAAQ,CAChC,OAAQ,EAAM,OAAO,CAAC,MAAM,CAC5B,IAAK,EAAM,OAAO,CAAC,GAAG,AACxB,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar collection = document.querySelectorAll(\"li\");\nfunction sortList(list) {\n    return Array.from(list).sort(function(a, b) {\n        var salaryA = parseInt(a.dataset.salary.slice(1).split(\",\").join(\"\"));\n        var salaryB = parseInt(b.dataset.salary.slice(1).split(\",\").join(\"\"));\n        return salaryB - salaryA;\n    });\n}\nfunction getEmployees(list) {\n    var sortedList = sortList(list);\n    var ul = document.querySelector(\"ul\");\n    ul.innerHTML = \"\";\n    sortedList.forEach(function(li) {\n        return ul.appendChild(li);\n    });\n    return sortedList.map(function(human) {\n        return {\n            name: human.innerText,\n            position: human.dataset.position,\n            salary: human.dataset.salary,\n            age: human.dataset.age\n        };\n    });\n}\ngetEmployees(collection);\n\n//# sourceMappingURL=index.6defb0aa.js.map\n","'use strict';\n\nconst collection = document.querySelectorAll('li');\n\nfunction sortList(list) {\n  return Array.from(list).sort((a, b) => {\n    const salaryA = parseInt(a.dataset.salary.slice(1).split(',').join(''));\n    const salaryB = parseInt(b.dataset.salary.slice(1).split(',').join(''));\n\n    return salaryB - salaryA;\n  });\n}\n\nfunction getEmployees(list) {\n  const sortedList = sortList(list);\n\n  const ul = document.querySelector('ul');\n\n  ul.innerHTML = '';\n\n  sortedList.forEach((li) => ul.appendChild(li));\n\n  return sortedList.map((human) => ({\n    name: human.innerText,\n    position: human.dataset.position,\n    salary: human.dataset.salary,\n    age: human.dataset.age,\n  }));\n}\n\ngetEmployees(collection);\n"],"names":["sortedList","ul","Array","from","document","querySelectorAll","sort","a","b","salaryA","parseInt","dataset","salary","slice","split","join","salaryB","querySelector","innerHTML","forEach","li","appendChild","map","human","name","innerText","position","age"],"version":3,"file":"index.6defb0aa.js.map"}